@using Common.Model
@using System.Web
@using Client.Services
@using Blazored.SessionStorage;
@using Microsoft.JSInterop
@inject NavigationManager NavigationManager
@inject HttpClient http
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IJSRuntime JSRuntime

<nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4">
    <div class="container-fluid">
        <a class="navbar-brand" href="@NoAccess(role)">Calendarica</a>
        <button class="navbar-toggler @NavButtonCssClass" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                aria-controls="navbarCollapse" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse @NavBarCssClass" id="navbarCollapse" @onclick="ToggleNavMenu">
            <ul class="navbar-nav me-auto mb-2 mb-md-0">
                <li class="nav-item">
                    <NavLink class="nav-link" href="@NoAccess(role)" Match="NavLinkMatch.All">
                        <span class="oi oi-person" aria-hidden="true"></span> Min side - Koordinator
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="@NoAccessBruger(role)">
                        <span class="oi oi-clipboard" aria-hidden="true"></span> Brugerlisten
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="@NoAccessFrivillig(role)">
                        <span class="oi oi-heart" aria-hidden="true"></span> Min side - Frivillige
                    </NavLink>
                </li>
            </ul>
        </div>
    </div>
</nav>


@code {
    private int userId { get; set; }

    private bool role { get; set; }

 

    protected override async Task OnInitializedAsync()
    {
        role = await sessionStorage.GetItemAsync<bool>("IsKoordinator");
    }
    private string NoAccess(bool role)
    {
        if (role)
        {
            return "vagtliste";
        }
        else
        {
            return "redigerbruger";
        }
    }

    private string NoAccessBruger(bool role)
    {
        if (role)
        {
            return "brugerlist";
        }
        else
        {
            return "redigerbruger";
        }
    }

    private string NoAccessFrivillig(bool role)
    {
        if (role)
        {
            return "vagtliste";
        }
        else
        {
            return "redigerbruger";
        }
    }

    private bool collapseNavMenu = true;
    private string? NavBarCssClass => collapseNavMenu ? null : "show";
    private string? NavButtonCssClass => collapseNavMenu ? "collapsed" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
