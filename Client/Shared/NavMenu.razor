@using Common.Model
@using System.Web
@using Client.Services
@using Blazored.SessionStorage;
@using Microsoft.JSInterop
@inject NavigationManager NavigationManager
@inject HttpClient http
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IJSRuntime JSRuntime



<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Client</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@NoAccessVagt(role)">
                <span class="oi oi-plus" aria-hidden="true"></span> Lav vagter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@NoAccessBruger(role)">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Brugerlisten
            </NavLink>
        </div
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@NoAccess(role)">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Min Side - Koordinator
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="redigerbruger">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Min Side - Frivillige
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private int userId { get; set; }

    private bool role { get; set; }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        role = await sessionStorage.GetItemAsync<bool>("IsKoordinator");
    }
    private string NoAccess(bool role)
    {
        if (role)
        {
            return "vagtliste";
        }
        else
        {
            return "stop";

        }
    }

    private string NoAccessBruger(bool role)
    {
        if (role)
        {
            return "brugerlist";
        }
        else
        {
            return "stop";
        }
    }

     private string NoAccessVagt(bool role)
    {
        if (role)
        {
            return "addvagt";
        }
        else
        {
            return "stop";
        }
    }
}
