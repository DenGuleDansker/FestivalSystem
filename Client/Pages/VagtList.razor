@page "/vagtliste"
@using Common.Model
@using Client.Services
@using System.Net.Http.Json;
@using Client.Pages;
@inject HttpClient Http;

<h5>Opret ny vagt</h5>

<PageTitle>Registrering</PageTitle>

<button type="button" class="btn btn-primary" @onclick="ToggleEditForm">Tilføj vagt</button>

@if (showEditForm)
{
    <EditForm EditContext="@aEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="col-md-12 mb-3">
            <label for="Navn">Navn</label>
            <InputText id="Navn" @bind-Value="vagt.Navn" class="form-control" />
        </div>
        <div class="col-md-12 mb-3">
            <label for="Adresse">Start dato</label>
            <input type="datetime" @bind="vagt.Start" class="form-control" />
        </div>
        <div class="col-md-12 mb-3">
            <label for="Adresse">Slut dato</label>
            <input type="datetime" @bind="vagt.Slut" class="form-control" />
        </div>
        <div class="col-md-12 mb-3">
            <label for="Email">Kategori</label>
            <InputNumber id="Kategori" @bind-Value="vagt.Kategori" class="form-control" />
        </div>
        <div class="col-md-6 mb-3">
            <label for="Fødselsdag">Antal pladser</label>
            <InputNumber id="Antal" @bind-Value="vagt.Antal" class="form-control" />
        </div>
        <div class="col-md-6 mb-3">
            <label for="Password">Beskrivelse</label>
            <InputText id="Beskrivelse" @bind-Value="vagt.Beskrivelse" class="form-control" />
        </div>
        <div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </EditForm>
}


<h5>Vagt liste</h5>


<div>
    <label>Sortering af:</label>
    <select @bind="@selectedSortOption">
        <option value="point">Point</option>
        <option value="startDate">Start dato</option>
        <option value="antal">Antal</option>
    </select>
</div>

<div>
    <label>Sorter efter:</label>
    <select @bind="@Sortering">
        <option value="ascending">Stigende</option>
        <option value="descending">Faldende</option>
    </select>
</div>
<input type="text" @bind="@searchKeyword" placeholder="Søg på vagt" />



<div class="row">
    <div class="col-md-12 mb-10">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Navn</th>
                    <th>Point</th>
                    <th>Start dato</th>
                    <th>Slut dato</th>
                    <th>Beskrivelse</th>
                    <th>KategoriID</th>
                    <th>Antal pladser</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var vagt in filteredVagtlist)
                {
                    <tr>
                        <td>@vagt.Navn</td>
                        <td>@vagt.Point</td>
                        <td>@vagt.Start</td>
                        <td>@vagt.Slut</td>
                        <td>@vagt.Beskrivelse</td>
                        <td>@vagt.Kategori</td>
                        <td>@vagt.Antal</td>
                        <td>
                            <a href="@($"/redigervagt?id={vagt.ID}")"> <button class="btn btn-primary">Rediger vagt</button></a>
                        </td>
                        <td>
                            <button class="btn btn-danger" @onclick="() => DeleteVagt(vagt.ID)">Slet Vagt</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@code {
    private Vagt vagt = new Vagt(); // Opretter et tomt Booking objekt
    private Vagt[]? vagtlist = new Vagt[0]; // Opretter en tom liste af booking objekter

    private bool showEditForm = false;

    private void ToggleEditForm()
    {
        showEditForm = !showEditForm;
    }

    [Inject]
    private IVagtService mService { get; set; }


    protected override async Task OnInitializedAsync()
    {
        vagtlist = (await mService.getAll()).ToArray();

    }


    private string searchKeyword = "";
    private string selectedSortOption = "point";
    private string Sortering = "ascending";


    private IEnumerable<Vagt> filteredVagtlist => string.IsNullOrWhiteSpace(searchKeyword) ? Sorter(vagtlist) : Sorter(vagtlist).Where(v => v.Navn.Contains(searchKeyword, StringComparison.OrdinalIgnoreCase));

    private IEnumerable<Vagt> Sorter(IEnumerable<Vagt> Sorter)
    {
        if (selectedSortOption == "point")
        {
            if (Sortering == "ascending")
                Sorter = Sorter.OrderBy(p => p.Point);
            else
                Sorter = Sorter.OrderByDescending(p => p.Point);
        }
        else if (selectedSortOption == "startDate")
        {
            if (Sortering == "ascending")
                Sorter = Sorter.OrderBy(p => p.Start);
            else
                Sorter = Sorter.OrderByDescending(p => p.Start);
        }
        else if (selectedSortOption == "antal")
        {
            if (Sortering == "ascending")
                Sorter = Sorter.OrderBy(p => p.Antal);
            else
                Sorter = Sorter.OrderByDescending(p => p.Antal);
        }

        return Sorter;
    }


    private void FilterAndSort()
    {
        // Opdatering af komponenten er automatisk, da den afhænger af filteredAndSortedPersons
    }

    private EditContext aEditContext;

    protected override void OnInitialized()
    {
        aEditContext = new EditContext(vagt);
        vagt.Start = DateTime.Now;
        vagt.Slut = DateTime.Now;
    }

    public async Task HandleValidSubmit()
    {
        await AddVagt();
        vagt.Start = DateTime.Now;
        vagt.Slut = DateTime.Now;
    }

    public async Task AddVagt()
    {
        await mService.AddVagt(vagt);
        Console.WriteLine("klient: add " + vagt.Navn); // Udskriver informationer om den nye booking i konsollen
        vagt = new(); // Opretter et nyt tomt Booking objekt for at rydde formen
    }

    public void DeleteVagt(int ID)
    {
        mService.DeleteVagt(ID);
        Console.WriteLine("klient: deleted" + ID);
    }
}