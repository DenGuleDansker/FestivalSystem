@page "/redigervagt"
@using Common.Model;
@using Client.Services;
@inject NavigationManager NavigationManager
@inject HttpClient http;


<h3>Vagt Informationer</h3>
<div>
    <p><strong>Navn:</strong> @vagt.Navn</p>
    <p><strong>Point:</strong> @vagt.Point</p>
    <p><strong>Start:</strong> @vagt.Start</p>
    <p><strong>Slut:</strong> @vagt.Slut</p>
    <p><strong>Beskrivelse:</strong> @vagt.Beskrivelse</p>
    <p><strong>Kategori:</strong> @vagt.Kategori</p>
    <p><strong>Antal:</strong> @vagt.Antal</p>
</div>

<EditForm Model="@aEditContext" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <h3>Rediger information</h3>
    <hr />
    <ValidationSummary />
    <div class="form-group row">
        <label for="navn" class="col-sm-2 col-form-label">
            Navn
        </label>
        <div class="col-sm-10">
            <InputText id="vagt navn" class="form-control" placeholder="Navn"
                       @bind-Value="vagt.Navn" />
        </div>
    </div>
    <div class="form-group row">
        <label for="Point" class="col-sm-2 col-form-label">
            Point
        </label>
        <div class="col-sm-10">
            <InputNumber id="point" class="form-control" placeholder="Point"
                         @bind-Value="vagt.Point" />
        </div>
    </div>
    <div class="form-group row">
        <label for="start" class="col-sm-2 col-form-label">
            Start
        </label>
        <div class="col-sm-10">
            <input type="datetime" id="vagt" class="form-control" placeholder="starttidspunkt"
                   @bind="vagt.Start" />
        </div>
    </div>
    <div class="form-group row">
        <label for="slut" class="col-sm-2 col-form-label">
            Slut
        </label>
        <div class="col-sm-10">
            <input type="datetime" id="slut" class="form-control"
                   @bind="vagt.Slut" />
        </div>
    </div>
    <div class="form-group row">
        <label for="beskrivelse" class="col-sm-2 col-form-label">
            Beskrivelse
        </label>
        <div class="col-sm-10">
            <InputText id="confirmBeskrivelse" class="form-control"
                       @bind-Value="vagt.Beskrivelse" />
        </div>
    </div>
    <div class="form-group row">
        <label for="Kategori" class="col-sm-2 col-form-label">
            Kategori
        </label>
        <div class="col-sm-10">
            <InputSelect id="Kategori" @bind-Value="vagt.Kategori" class="form-control">
                @foreach (var kat in kategorilist)
                {
                    <option value="@kat.ID">@kat.Navn</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="form-group row">
        <label for="Password" class="col-sm-2 col-form-label">
            Antal Pladser
        </label>
        <div class="col-sm-10">
            <InputNumber @bind-Value="vagt.Antal" class="form-control" />
        </div>
    </div>
    <button class="btn btn-primary" type="submit">Gem</button>
</EditForm>

@code {

    // Diverse variabler deklareres til senere brug
    private Vagt vagt = new Vagt();
    private Vagt[]? vagtlist = new Vagt[0];
    private Kategori[]? kategorilist = new Kategori[0]; //Opretter et tomt 

    private EditContext aEditContext;

    private int UrlId = 0;

    [Inject]
    private IVagtService mService { get; set; }

    protected override void OnInitialized()
    {

        aEditContext = new EditContext(vagt);
        vagt.Start = DateTime.Now;
        vagt.Slut = DateTime.Now;

    }

    protected override async Task OnInitializedAsync()
    {
        GetUrlID(); // INTERNAL: Ret sikker på vi ikke bruger denne længere drenge, ligger den ikke i session storage?
        vagt = await mService.GetVagt(UrlId);
        kategorilist = (await mService.getAllKategori()).ToArray();
    }

    // Når man indsender formularen udføres nedenstående. Pågældende vagt opdateres ud fra vagtens ID og datofelterne nulstilles til at vise dags dato
    public async Task HandleValidSubmit()
    {
        vagt.ID = UrlId; // INTERNAL: Er dette korrekt? - Er UrlId ikke brugerens ID?
        await UpdateVagt();

        vagt.Start = DateTime.Now;
        vagt.Slut = DateTime.Now;
    }

    // INTERNAL: Igen, ret sikker på denne kan slettes helt. Kan @Marcus confirme?
    public void GetUrlID()
    {
        var uri = new Uri(NavigationManager.Uri); // Opretter et Uri objekt med URL'en fra NavigationManager
        var queryParameters = System.Web.HttpUtility.ParseQueryString(uri.Query); // Bruger HttpUtility klassen til at parse query stringen i URL'en
        UrlId = Int32.Parse(queryParameters.Get("id")); // Henter ID'en fra URL'en og gemmer den i UrlId variablen
    }

    // Kalder metoden i vagt servicen der opdater en vagts stamdata
    public async Task UpdateVagt()
    {
        await mService.UpdateVagt(vagt);
    }
}
