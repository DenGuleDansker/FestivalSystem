@layout LoginLayout
@page "/"
@using Client.Services;
@using Common.Model;
@inject NavigationManager NavigationManager
@inject HttpClient Http;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage




<PageTitle>Registrering</PageTitle>

<head>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<body>
    
    <div class="loginpop" style="display: @logdisplay">
        <a @onclick="ToggleLogPop">Back</a>
    </div>

    <div class="loginpop" style="display: @tilmelddisplay">
        <a @onclick="ToggleDispPop">Back</a>
    </div>

    <div class="loginpop" style="display: @omosdisplay">
        <a @onclick="OmOsDispPop">Back</a>
    </div>

    <div class="row index-container">
        <div class="col col1" @onclick="ToggleDispPop">
            <h1>Tilmeld dig som frivillig</h1>
        </div>
        <div class="col col2" @onclick="ToggleLogPop" >
            <h1>Login</h1>
        </div>
        <div class="col col3" @onclick="OmOsDispPop">
            <h1>Om os</h1>
        </div>
    </div>
</body>

@code {
    public string showerror = "none";
    private Bruger bruger = new Bruger();
    private Bruger brugerForm = new Bruger();
    private Bruger[]? brugerlist = new Bruger[0];
    private string billede = "visibility.png";

    private string tilmelddisplay = "none";
    private string logdisplay = "none";
    private string omosdisplay = "none";

    private bool showPassword = false;
    private string passwordType = "password";

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
        passwordType = showPassword ? "text" : "password";
    }

    bool showPopup = false;


    void ToggleLogPop()
    {
        if (logdisplay == "none")
        {
            logdisplay = "inline";
        }else
        {
            logdisplay = "none";
        }
    }

    void ToggleDispPop()
    {
        if (tilmelddisplay == "none")
        {
            tilmelddisplay = "inline";
        }
        else
        {
            tilmelddisplay = "none";
        }
    }

    void OmOsDispPop()
    {
        if (omosdisplay == "none")
        {
            omosdisplay = "inline";
        }
        else
        {
            omosdisplay = "none";
        }
    }


    void ShowPopup()
    {
        showPopup = true;
    }

    void HidePopup()
    {
        showPopup = false;
    }

    bool showEditForm = false;
    bool visFormular = true;


    private void ToggleEditForm()
    {
        visFormular = !visFormular;
        showEditForm = !showEditForm;
    }


    private EditContext aEditContext;

    [Inject]
    private IBrugerService mService { get; set; }

    protected override void OnInitialized()
    {
        aEditContext = new EditContext(bruger);
        bruger.Fødselsdag = DateTime.Now;
    }

    public async Task HandleValidSubmit()
    {
        if (brugerForm.Email == " ")
        {
            showerror = "inline";
        }
        else
        {
            var email = brugerForm.Email;
            bruger = await getSpecific(email);

            Console.WriteLine(bruger.Efternavn);

            login();
        }


    }

    public async Task HandleValidRegister()
    {
        await Add();
        bruger.Fødselsdag = DateTime.Now;
    }

    public async Task<Bruger> getSpecific(string email)
    {

        var bruger = await mService.getSpecific(email);

        return bruger;

    }



    public async Task Add()
    {
        await mService.Add(bruger);
        bruger = new();

    }

    private async Task login()
    {
        if (bruger.Efternavn == null || bruger.Email == null || bruger.Password == null)
        {
            showerror = "inline";
        }
        else
        {
            if (brugerForm.Password.ToString() == bruger.Password.ToString() && bruger.IsKoordinator == true)
            {
                NavigationManager.NavigateTo($"/vagtliste", forceLoad: true); // Navigerer til side hvis password passer med det der ligger i serveren og brugeren har koordinator-privillegier
            }
            else if (brugerForm.Password.ToString() == bruger.Password.ToString() && bruger.IsKoordinator == false)
            {
                NavigationManager.NavigateTo($"/redigerbruger", forceLoad: true); // Navigerer til side hvis password passer med det der ligger i serveren og brugeren har koordinator-privillegier
            }
            else
            {
                showerror = "inline";
            }
        }

        await sessionStorage.SetItemAsync("userId", bruger.ID);
        await sessionStorage.SetItemAsync("IsKoordinator", bruger.IsKoordinator);


    }
}
