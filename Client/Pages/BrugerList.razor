@page "/brugerlist"
@using Common.Model
@using Client.Services
@using System.Net.Http.Json;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage


<PageTitle>Brugerlisten</PageTitle>

<h1>Brugerlisten</h1>

<input type="text" @bind="@searchKeyword" placeholder="Søg på navn" />


<div class="row">
    <div class="col-md-12 mb-12">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Fornavn</th>
                    <th>Efternavn</th>
                    <th>Telefonnummer</th>
                    <th>Addresse</th>
                    <th>Email</th>
                    <th>Fødselsdagsdato</th>
                    <th>koordinator: </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bruger in filteredBrugerList)
                {
                    <tr>
                        <td>@bruger.Fornavn</td>
                        <td>@bruger.Efternavn</td>
                        <td>@bruger.Telefonnummer</td>
                        <td>@bruger.Adresse</td>
                        <td>@bruger.Email</td>
                        <td>@bruger.Fødselsdag</td>
                        <td>@bruger.IsKoordinator</td>
                        <td>
                            <a href="@($"/redigerbruger?id={userId}")"> <button class="btn btn-primary">Rediger bruger</button></a>
                        </td>
                        <td>
                            <button class="btn btn-danger" @onclick="() => DeleteBruger(bruger.ID)">Slet Vagt</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@code {

    private int userId { get; set; }

    private Bruger bruger = new Bruger(); // Opretter et tomt Booking objekt
    private Bruger[]? brugerlist = new Bruger[0]; // Opretter en tom liste af Booking objekter
    private string searchKeyword = "";


    [Inject]
    private IBrugerService mService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        userId = await sessionStorage.GetItemAsync<int>("userId");
        brugerlist = (await mService.getAll()).ToArray();
    }

    private IEnumerable<Bruger> filteredBrugerList => string.IsNullOrWhiteSpace(searchKeyword) ? brugerlist : brugerlist.Where(v => v.Fornavn.Contains(searchKeyword, StringComparison.OrdinalIgnoreCase));

    public void DeleteBruger(int ID)
    {
        mService.DeleteBruger(ID);
        Console.WriteLine("klient: deleted" + ID);
    }

}

